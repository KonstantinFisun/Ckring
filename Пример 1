# Пример 1
# 1 куча
# 19 задача
win = 52
def play19_1(s, c):
    global win # Глобальная переменная
    if s >= win and c == 2: # Если выиграли и 2 ход у Пети, то истинна
        return True
    elif s < win and c == 2: # Если менише камней и ход Вани, то не подходит
        return False
    # Увеличиваем ход и должны найти хотя бы один ход, когда Петя ошибается
    return play19_1(s + 1, c + 1) or play19_1(s + 4, c + 1) or play19_1(s * 2, c + 1)

# 20 задача
def play20_1(s, c):
    global win # Глобальная переменная
    if s >= win and c == 3: # Если выиграли и ход перешел к Вани, то истинна 
        return True
    elif (s< win and c == 3) or s >= win: # Если не выиграли и ход перешел к Вани или выиграли, но ход не тот, то ложь 
        return False
    elif c % 2 == 0: # Если ходит Петя, то нужно найти хотя бы одну комбинацию, в которой он вин
        return play20_1(s + 1, c + 1) or play20_1(s + 4, c + 1) or play20_1(s * 2, c + 1)
        # Если ходит Ваня, то нужно найти все комбинации, в которой он проиграет
    return play20_1(s + 1, c + 1) and play20_1(s + 4, c + 1) and play20_1(s * 2, c + 1)

def play21_1(s, c):
    global win # Глобальная переменная
    if s >= win and (c == 4 or c == 2): # Если выиграли и ход у Пети, либо 2 либо 4, то истинна 
        return True
    elif (s < win and c == 4) or s >= win: # Если еще не выиграли и ход у Пети 2, то габелла, или выиграли, но не там где нужно, то ложь 
        return False
    elif c % 2 == 1: # Если ход Вани, то выбираем выигрышную
        return play21_1(s + 1, c + 1) or play21_1(s + 4, c + 1) or play21_1(s * 2, c + 1)
    # Если ход у Пети, то он при всех случаях должен проиграть
    return play21_1(s + 1, c + 1) and play21_1(s + 4, c + 1) and play21_1(s * 2, c + 1)

for s in range(1,52):
    if(play21_1(s, 0)):
        print(s)
        
# Пример 1
# 1 куча
# Способ

# Выигрышная за один ход
def WIN1(s):
    if s + 1 >= 52 or s + 4 >= 52 or s * 2 >= 52:
        return True
    else:
        return False

# Проигрышная позиция
def LOSS1(s):
    # Не выиграваем за один ход
    if(not(WIN1(s))) and WIN1(s + 1) and WIN1(s * 2) and WIN1(s + 4):
        return True
    else:
        return False

# Выигрышная за 2 хода
def WIN2(s):
    if(LOSS1(s + 1) or LOSS1(s * 2) or LOSS1(s + 4)):
        return True
    return False
    
def LOSS12(s):
    if (WIN2(s + 1) or WIN2(s + 4) or WIN2(s * 2)) and (WIN1(s + 1) or WIN1(s + 4) or WIN2(s * 2)):
        return True
    return False
    
# Задание 19
# if win1 or win1 or win1

# # Задание 20
# for s in range(1,51):
#     if WIN2(s):
#         print(s)
        
# Задание 21
for s in range(1,51):
    if LOSS12(s):
        print(s)
